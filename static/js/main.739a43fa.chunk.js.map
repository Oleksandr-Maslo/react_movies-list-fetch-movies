{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMovies","useState","setTitle","setMovie","error","setError","loading","setLoading","loadMovie","event","a","preventDefault","query","fetch","then","res","json","catch","Response","Error","response","loadedMovie","Title","Plot","imdbID","Poster","htmlFor","type","id","placeholder","classNames","value","onChange","e","target","disabled","length","onClick","find","currentMovie","prevMovies","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.739a43fa.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[],\n  setMovies: React.Dispatch<React.SetStateAction<Movie[]>>;\n};\n\nexport const FindMovie: React.FC<Props> = ({ movies, setMovies }) => {\n  const defaultPoster\n    = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const loadMovie = async (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    event.preventDefault();\n\n    setLoading(true);\n\n    const response = await getMovie(title);\n\n    setLoading(false);\n\n    if ('Error' in response) {\n      setError(true);\n    } else {\n      const loadedMovie: Movie = {\n        title: response.Title,\n        description: response.Plot,\n        imdbId: response.imdbID,\n        imdbUrl: `https://www.imdb.com/title/${response.imdbID}`,\n        imgUrl: response.Poster === 'N/A'\n          ? defaultPoster\n          : response.Poster,\n      };\n\n      setMovie(loadedMovie);\n    }\n  };\n\n  const addMovieHandler = () => {\n    if (movie !== null\n        && !movies.find((currentMovie) => movie.title === currentMovie.title)\n    ) {\n      setMovies(\n        prevMovies => [...prevMovies, movie],\n      );\n\n      setTitle('');\n      setMovie(null);\n      setError(false);\n    } else {\n      setTitle('');\n      setMovie(null);\n      setError(false);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': error })}\n              value={title}\n              onChange={(e) => {\n                setTitle(e.target.value);\n                setError(false);\n              }}\n            />\n          </div>\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              disabled={title.length === 0}\n              className={classNames('button is-light',\n                { 'is-loading': loading })}\n              onClick={(event) => loadMovie(event)}\n            >\n              {movie !== null ? 'Search again' : 'Find a movie'}\n\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {movie !== null && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={addMovieHandler}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movie} />\n          </>\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=4876ee6c';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          setMovies={setMovies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}